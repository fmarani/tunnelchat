import re
import json
import urllib
from tornado.escape import xhtml_escape

OEMBED_HINTS = {
        'youtube.com': 'http://www.youtube.com/oembed?url=%s&format=json',
        'flickr.com/photos': 'http://flickr.com/services/oembed.json?url=%s&maxwidth=800&maxheight=600',
        'http://vimeo.com/': 'http://vimeo.com/api/oembed.json?url=%s&maxwidth=800&maxheight=600',
        'www.amazon.co': 'http://oohembed.com/oohembed/?url=%s&maxwidth=400&maxheight=300',
        'play.spotify.com/track/': 'https://embed.spotify.com/oembed/?url=%s',
        }

_URL_RE = re.compile(r"""\b((?:([\w-]+):(/{1,3})|www[.])(?:(?:(?:[^\s&()]|&amp;|&quot;)*(?:[^!"#$%&'()*+,.:;<=>?@\[\]^`{|}~\s]))|(?:\((?:[^\s&()]|&amp;|&quot;)*\)))+)""")

SMILEYS = {u':(': u'Crying face.png',
 u':)': u'Smiley.png',
 u':*': u'Kiss.png',
 u'(wink)': u'Winking smiley.png',
 u'(handshake)': u'Handshake.png',
 u'(muscle)': u'Muscle.png',
 u':#': u'My lips are sealed.png',
 u'(F)': u'Flower.png',
 u'I=)': u'Sleepy.png',
 u':?': u'Thinking.png',
 u'(devil)': u'Devil.png',
 u'(d)': u'Drink.png',
 u'(h)': u'Heart.png',
 u'B=)': u'Cool smiley.png',
 u'\\o/': u'Dancing.png',
 u'(envy)': u'Envy.png',
 u':=s': u'Worried.png',
 u'(talk)': u'Talking.png',
 u'B-)': u'Cool smiley.png',
 u'(dull)': u'Dull.png',
 u']:)': u'Evil grin.png',
 u'(laugh)': u'Big smiley.png',
 u'(N)': u'No.png',
 u'&gt;:)': u'Evil grin.png',
 u'(rock)': u'Rock.png',
 u'(mooning)': u'Mooning.png',
 u'(yawn)': u'Yawn.png',
 u'($)': u'Cash.png',
 u'(drink)': u'Drink.png',
 u'\\:D/': u'Dancing.png',
 u':o': u'Surprised smiley.png',
 u'(rofl)': u'Rolling on the floor laughing.png',
 u':d': u'Big smiley.png',
 u'B=|': u'Nerdy.png',
 u'(brokenheart)': u'Broken heart.png',
 u':|': u'Speechless smiley.png',
 u'(ninja)': u'Ninja.png',
 u':x': u'My lips are sealed.png',
 u'(wasntme)': u"It wasn't me!.png",
 u'(happy)': u'Happy.png',
 u':&amp;': u'Puking.png',
 u':p': u'Smiley with tongue out.png',
 u'(H)': u'Heart.png',
 u'|(': u'Dull.png',
 u':s': u'Worried.png',
 u'(clock)': u'Time.png',
 u':O': u'Surprised smiley.png',
 u':D': u'Big smiley.png',
 u'(grin)': u'Evil grin.png',
 u'(no)': u'No.png',
 u':@': u'Angry.png',
u'B)': u'Cool smiley.png',
u'(emo)': u'Emo.png',
u'(cake)': u'Cake.png',
u':X': u'My lips are sealed.png',
u'(pi)': u'Pizza.png',
u'(y)': u'Yes.png',
u'(hug)': u'Hug.png',
u'(london)': u'Raining.png',
u':P': u'Smiley with tongue out.png',
u'(mmm)': u'Mmmmm....png',
u'B-|': u'Nerdy.png',
u':S': u'Worried.png',
u'8=|': u'Nerdy.png',
u':=x': u'My lips are sealed.png',
u'8)': u'Cool smiley.png',
u'X-(': u'Angry.png',
u':-O': u'Surprised smiley.png',
u':=|': u'Speechless smiley.png',
u'I-)': u'Sleepy.png',
u'(Y)': u'Yes.png',
u':-@': u'Angry.png',
u':-D': u'Big smiley.png',
u':-X': u'My lips are sealed.png',
u':=o': u'Surprised smiley.png',
u':-S': u'Worried.png',
u':-P': u'Smiley with tongue out.png',
u':-&amp;': u'Puking.png',
u':=d': u'Big smiley.png',
u':=X': u'My lips are sealed.png',
u'(ss)': u'Skype.png',
u':-o': u'Surprised smiley.png',
u'(doh)': u'Doh!.png',
u'(flex)': u'Muscle.png',
u':=S': u'Worried.png',
u':=P': u'Smiley with tongue out.png',
u':-d': u'Big smiley.png',
u'(mo)': u'Cash.png',
u'8-|': u'Nerdy.png',
u':-x': u'My lips are sealed.png',
u':=O': u'Surprised smiley.png',
u':-|': u'Speechless smiley.png',
u':"&gt;': u'Blush.png',
u':-s': u'Worried.png',
u':=@': u'Angry.png',
u'(L)': u'Heart.png',
u':=D': u'Big smiley.png',
u'(mp)': u'Phone.png',
u'(chuckle)': u'Giggle.png',
u'|-()': u'Yawn.png',
u':=?': u'Thinking.png',
u':-p': u'Smiley with tongue out.png',
u'(fubar)': u'FUBAR.png',
u'(blush)': u'Blush.png',
u'(punch)': u'Punch.png',
u':=&amp;': u'Puking.png',
u':=*': u'Kiss.png',
u':=(': u'Crying face.png',
u':=)': u'Smiley.png',
u'8=)': u'Cool smiley.png',
u'8|': u'Nerdy.png',
u':=#': u'My lips are sealed.png',
u';)': u'Winking smiley.png',
u';(': u'Crying face.png',
u':=$': u'Blush.png',
u':-*': u'Kiss.png',
u'\\:d/': u'Dancing.png',
u':-(': u'Crying face.png',
u':-)': u'Smiley.png',
u'8-)': u'Cool smiley.png',
u'(ok)': u'Yes.png',
u':-#': u'My lips are sealed.png',
u'(st)': u'Raining.png',
u':-$': u'Blush.png',
u'(yes)': u'Yes.png',
u'X=(': u'Angry.png',
u':-?': u'Thinking.png',
u'(love)': u'Heart.png',
u'(clap)': u'Clapping.png',
u'(sad)': u'Sad face.png',
u'(swear)': u'Swearing.png',
u'(nod)': u'Nodding.png',
u'(cash)': u'Cash.png',
u'(puke)': u'Puking.png',
u'(inlove)': u'In love.png',
u'(shake)': u'Shake.png',
u'(movie)': u'Movie.png',
u'x=(': u'Angry.png',
u'(music)': u'Music.png',
u'(wait)': u'Wait.png',
u'(bear)': u'Hug.png',
u'(o)': u'Time.png',
u'(kate)': u'Make-up.png',
u'(sun)': u'Sun.png',
u'X(': u'Angry.png',
u'(bandit)': u'Bandit.png',
u'x-(': u'Angry.png',
u'(dance)': u'Dancing.png',
u'(party)': u'Party.png',
u'|=(': u'Dull.png',
u'(smoking)': u'Smoking.png',
u':$': u'Blush.png',
u'(worry)': u'Worried.png',
u'(:|': u'Sweating.png',
u':=p': u'Smiley with tongue out.png',
u'(think)': u'Thinking.png',
u'(drunk)': u'Drunk.png',
u'x(': u'Angry.png',
u'(flower)': u'Flower.png',
u'(heart)': u'Heart.png',
u'(tongueout)': u'Smiley with tongue out.png',
u';=)': u'Winking smiley.png',
u';=(': u'Crying face.png',
u'B|': u'Nerdy.png',
u'(smirk)': u'Smirking.png',
u'(snooze)': u'Sleepy.png',
u'(m)': u'You have mail.png',
u'(cool)': u'Cool smiley.png',
u'(film)': u'Movie.png',
u'(hrv)': u'Pool party.png',
u'(*)': u'Star.png',
u'(time)': u'Time.png',
u'(smoke)': u'Smoking.png',
u'|-(': u'Dull.png',
u'|-)': u'Sleepy.png',
u'(hi)': u'Hi.png',
u'(bug)': u'Bug.png',
u'(mail)': u'You have mail.png',
u'(whew)': u'Whew.png',
u'(beer)': u'Beer.png',
u':^)': u'Wondering.png',
u'(ph)': u'Phone.png',
u'(makeup)': u'Make-up.png',
u'(toivo)': u'Toivo.png',
u'(l)': u'Heart.png',
u'(rain)': u'Raining.png',
u'(mm)': u'Mmmmm....png',
u'(cry)': u'Crying face.png',
u'(D)': u'Drink.png',
u'(ci)': u'Smoking.png',
u'(poolparty)': u'Pool party.png',
u'(mmmm)': u'Mmmmm....png',
u'(call)': u'Call.png',
u'(headbang)': u'Banging head on wall.png',
u'(giggle)': u'Giggle.png',
u'(finger)': u'Finger.png',
u'(pizza)': u'Pizza.png',
u'(sweat)': u'Sweating.png',
u'(~)': u'Movie.png',
u'(angry)': u'Angry.png',
u'(nerd)': u'Nerdy.png',
u'(e)': u'You have mail.png',
u';-)': u'Winking smiley.png',
u';-(': u'Crying face.png',
u'(kiss)': u'Kiss.png',
u'(wonder)': u'Wondering.png',
u'(speechless)': u'Speechless smiley.png',
u'(u)': u'Broken heart.png',
u'(bow)': u'Bowing.png',
u'(coffee)': u'Coffee.png',
u'(banghead)': u'Banging head on wall.png',
u'(^)': u'Cake.png',
u'(O)': u'Time.png',
u'(tmi)': u'Too much information.png',
u'(star)': u'Star.png',
u'(surprised)': u'Surprised smiley.png',
u'(skype)': u'Skype.png',
u'(smile)': u'Smiley.png',
u'(n)': u'No.png',
u'(U)': u'Broken heart.png',
u'(f)': u'Flower.png',
u'(phone)': u'Phone.png',
u'(angel)': u'Angel.png'}

def message_beautify(body):
    words = body.split(" ")
    final_words = []
    for word in words:
        escape_required = False

        # beautify links
        if _URL_RE.search(word):
            # transform image links
            if any(word.endswith(x) for x in ['.jpg','.png','.gif']):
                word = "<img src='%s'>" % word
                escape_required = False

            # expand possible oembeds
            for hint in OEMBED_HINTS.keys():
                if hint in word:
                    oembed_resp = json.load(urllib.urlopen(OEMBED_HINTS[hint] % body))
                    if oembed_resp.has_key('html'):
                        word = oembed_resp['html']
                        escape_required = False
                    else:
                        if oembed_resp['type'] == "photo":
                            word = "<img src='%s'>" % oembed_resp['url']
                            escape_required = False

            if escape_required:
                word = "<a href='%s'>%s</a>" % (word, word)
                escape_required = False

        # expand smileys
        smiley = SMILEYS.get(word, None)
        if smiley:
            word = "<img src='/static/emoticons/%s'/>" % smiley
            escape_required = False

        if escape_required:
            word = xhtml_escape(word)

        final_words.append(word)

    return ' '.join(final_words)
